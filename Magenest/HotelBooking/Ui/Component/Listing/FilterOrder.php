<?php

namespace Magenest\HotelBooking\Ui\Component\Listing;

use Magento\Framework\View\Element\UiComponent\ContextInterface;
use Magento\Framework\View\Element\UiComponentFactory;
use Magento\Ui\Component\Listing\Columns\Column;
use Magento\Catalog\Model\ProductFactory;

class FilterOrder extends Column
{

    /**
     * @var \Magento\Framework\App\ResourceConnection
     */
    protected $resource;
    /**
     * @var ProductFactory
     */
    protected $productFactory;

    public function __construct(ContextInterface $context, UiComponentFactory $uiComponentFactory, ProductFactory $productFactory, \Magento\Framework\App\ResourceConnection $resource, array $components = [], array $data = [])
    {
        $this->resource = $resource;
        $this->productFactory = $productFactory;
        parent::__construct($context, $uiComponentFactory, $components, $data);
    }

    public function prepareDataSource(array $dataSource)
    {
        $connection = $this->resource->getConnection();
        $indexTable = $this->resource->getTableName('sales_order_item');
        $arr = [];

        foreach ($dataSource['data']['items'] as $key => & $item) {

            $select = $connection->select('')->from($indexTable)->where(
                "order_id = {$item['entity_id']}"
            );
            $productData = $connection->fetchAll($select);
            $name = '';
            foreach ($productData as $p) {
                $product = $this->productFactory->create()->load($p['product_id'])->getData();
                if (!empty($product['room_type'])) {
                    if ($product['room_type'] == 'double') {
                        $name .= $p['name'] . '<br>';
                        $item['name'] = $name;
                        array_push($arr, $item);
                    }
                }
            }
        }
        $dataSource['data']['items'] = $arr;
        return parent::prepareDataSource($dataSource); // TODO: Change the autogenerated stub
    }
}