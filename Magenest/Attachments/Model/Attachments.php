<?php
namespace Magenest\Attachments\Model;

use Magento\Framework\Model\AbstractModel;

class Attachments extends AbstractModel implements \Magenest\Attachments\Api\Data\AttachmentInterface {

    protected function _construct()
    {
        $this->_init(\Magenest\Attachments\Model\ResourceModel\Attachments::class);
        parent::_construct(); // TODO: Change the autogenerated stub
    }

    /**
     * Retrieves a value from the data array if set, or null otherwise.
     *
     * @param string $key
     * @return mixed|null
     */
    protected function _get($key)
    {
        return $this->_data[$key] ?? null;
    }

    public function getPath()
    {
        return $this->_get(self::PATH);
    }

    public function setPath($path)
    {
        return $this->setData(self::PATH, $path);
    }

    public function getFileLabel()
    {
        return $this->_get(self::FILE_LABEL);
    }

    public function getVisible()
    {
        return $this->_get(self::VISIBLE);
    }

    public function setVisible($visible)
    {
        return $this->setData(self::VISIBLE, $visible);
    }

    public function getIncludeOnOrder()
    {
        return $this->_get(self::INCLUDE_ON_ORDER);
    }

    public function setIncludeOnOrder($includeOnOrder)
    {
        return $this->setData(self::INCLUDE_ON_ORDER, $includeOnOrder);
    }

    public function setFileLabel($label)
    {
        return $this->setData(self::FILE_LABEL, $label);
    }

    public function getCustomerGroupIds()
    {
        return $this->_get(self::CUSTOMER_GROUPS);
    }

    public function setCustomerGroupIds($groupIds)
    {
        return $this->setData(self::CUSTOMER_GROUPS, $groupIds);
    }

    public function getCreatedAt()
    {
        return $this->_get(self::CREATED_AT);
    }

    public function setCreatedAt($createdAt)
    {
        return $this->setData(self::CREATED_AT, $createdAt);
    }

    public function getUpdatedAt()
    {
        return $this->_get(self::UPDATED_AT);
    }

    public function setUpdatedAt($updatedAt)
    {
        return $this->setData(self::UPDATED_AT, $updatedAt);
    }

    public function getFileName()
    {
        return $this->_get(self::FILE_NAME);
    }

    public function setFileName($name)
    {
        return $this->setData(self::FILE_NAME, $name);
    }

    public function getCustomAttribute($attributeCode)
    {
        // TODO: Implement getCustomAttribute() method.
    }

    public function setCustomAttribute($attributeCode, $attributeValue)
    {
        // TODO: Implement setCustomAttribute() method.
    }

    public function getCustomAttributes()
    {
        // TODO: Implement getCustomAttributes() method.
    }

    public function setCustomAttributes(array $attributes)
    {
        // TODO: Implement setCustomAttributes() method.
    }
}
